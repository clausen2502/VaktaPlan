name: CI

on:
  push:
    branches: [ "main", "dev", "**/feature/**" ]
  pull_request:
    branches: [ "main", "dev" ]

jobs:
  tests:
    runs-on: ubuntu-latest

    env:
      # Your Settings() expects ENVIRONMENT to be one of these literals.
      ENVIRONMENT: "local"

      # Satisfy required fields with safe dummy values:
      JWT_SECRET_KEY: "dummy-secret-key"
      POSTGRESQL_USERNAME: "dummy"
      POSTGRESQL_PASSWORD: "dummy"
      POSTGRESQL_SERVER: "localhost"
      POSTGRESQL_PORT: "5432"
      POSTGRESQL_DATABASE: "dummy"

      # Point SQLAlchemy to an in-memory SQLite so imports don't try Postgres.
      SQLALCHEMY_DATABASE_URI: "sqlite+pysqlite:///:memory:"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install deps
        run: |
          python -V
          pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install coverage

      - name: Run unit tests with coverage
        run: |
          coverage run --omit="tests/*,main.py,*/__init__.py,**/alembic/*,**/migrations/*" \
            -m unittest discover -s tests -p "test_*.py" -v
          coverage report --omit="tests/*,main.py,*/__init__.py,**/alembic/*,**/migrations/*"
          coverage xml -o coverage.xml

      - name: Upload coverage report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage.xml
