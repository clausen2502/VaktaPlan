name: CI

on:
  push:
    branches: [ main, dev, "**/feature/**" ]
  pull_request:
    branches: [ main, dev ]

jobs:
  tests:
    name: Unit tests (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.12" ]

    env:
      # Harmless in-memory DB so imports don't try Postgres
      SQLALCHEMY_DATABASE_URI: sqlite+pysqlite:///:memory:
      ENVIRONMENT: test

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-

      - name: Install dependencies
        run: |
          python -V
          pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          # Make sure test tools exist (pytest runs unittest too)
          pip install pytest pytest-cov

      - name: Run unittest with coverage
        run: |
          pip install coverage
          coverage run -m unittest discover -s tests -p "test_*.py" -v
          coverage xml -o coverage.xml

      - name: Upload test reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-reports
          path: |
            pytest-report.xml
            coverage.xml

      - name: Coverage summary
        if: always()
        run: |
          python - << 'PY'
          import xml.etree.ElementTree as ET
          t = ET.parse('coverage.xml').getroot()
          cov = float(t.attrib['line-rate'])*100
          print(f"TOTAL coverage: {cov:.2f}%")
          PY
