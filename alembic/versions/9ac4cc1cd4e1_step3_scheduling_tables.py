"""step3: scheduling tables

Revision ID: 9ac4cc1cd4e1
Revises: bc02aec7c452
Create Date: 2025-10-13 17:18:00.126108

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9ac4cc1cd4e1'
down_revision: Union[str, None] = 'bc02aec7c452'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('publications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('org_id', sa.Integer(), nullable=False),
    sa.Column('range_start', sa.Date(), nullable=False),
    sa.Column('range_end', sa.Date(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('published_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['org_id'], ['organizations.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_publications_org_id'), 'publications', ['org_id'], unique=False)
    op.create_index(op.f('ix_publications_user_id'), 'publications', ['user_id'], unique=False)
    op.create_table('availability',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('weekday', sa.Integer(), nullable=False),
    sa.Column('start_time', sa.Time(), nullable=True),
    sa.Column('end_time', sa.Time(), nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('employee_id', 'weekday', 'start_time', 'end_time', name='unique_availability_slot')
    )
    op.create_index(op.f('ix_availability_employee_id'), 'availability', ['employee_id'], unique=False)
    op.create_table('preferences',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('weekday', sa.Integer(), nullable=True),
    sa.Column('start_time', sa.Time(), nullable=True),
    sa.Column('end_time', sa.Time(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.Column('weight', sa.Integer(), nullable=True),
    sa.Column('is_negative', sa.Boolean(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['role_id'], ['job_roles.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('employee_id', 'weekday', 'start_time', 'end_time', 'is_negative', 'role_id', 'location_id', name='uq_preference_full')
    )
    op.create_index(op.f('ix_preferences_employee_id'), 'preferences', ['employee_id'], unique=False)
    op.create_index(op.f('ix_preferences_location_id'), 'preferences', ['location_id'], unique=False)
    op.create_index(op.f('ix_preferences_role_id'), 'preferences', ['role_id'], unique=False)
    op.create_table('shifts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('org_id', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('start_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('end_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('status', sa.Enum('draft', 'published', name='shift_status'), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['org_id'], ['organizations.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['role_id'], ['job_roles.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_shifts_location_id'), 'shifts', ['location_id'], unique=False)
    op.create_index(op.f('ix_shifts_org_id'), 'shifts', ['org_id'], unique=False)
    op.create_index('ix_shifts_org_start', 'shifts', ['org_id', 'start_at'], unique=False)
    op.create_index(op.f('ix_shifts_role_id'), 'shifts', ['role_id'], unique=False)
    op.create_table('assignments',
    sa.Column('shift_id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('preference_score', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['shift_id'], ['shifts.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('shift_id', 'employee_id')
    )
    op.create_index(op.f('ix_assignments_employee_id'), 'assignments', ['employee_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_assignments_employee_id'), table_name='assignments')
    op.drop_table('assignments')
    op.drop_index(op.f('ix_shifts_role_id'), table_name='shifts')
    op.drop_index('ix_shifts_org_start', table_name='shifts')
    op.drop_index(op.f('ix_shifts_org_id'), table_name='shifts')
    op.drop_index(op.f('ix_shifts_location_id'), table_name='shifts')
    op.drop_table('shifts')
    op.drop_index(op.f('ix_preferences_role_id'), table_name='preferences')
    op.drop_index(op.f('ix_preferences_location_id'), table_name='preferences')
    op.drop_index(op.f('ix_preferences_employee_id'), table_name='preferences')
    op.drop_table('preferences')
    op.drop_index(op.f('ix_availability_employee_id'), table_name='availability')
    op.drop_table('availability')
    op.drop_index(op.f('ix_publications_user_id'), table_name='publications')
    op.drop_index(op.f('ix_publications_org_id'), table_name='publications')
    op.drop_table('publications')
    # ### end Alembic commands ###
